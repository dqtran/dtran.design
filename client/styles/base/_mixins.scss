/* --- Functions --- */

// Convert pixels to ems
$browser-context: 16; // Default

@function em($pixels, $context: $browser-context) {
	@return #{$pixels/$context}em
}

@function pxToRem($px) {
	$rem: $px / $browser-context;
	@return #{$rem}rem;
}


/* 
Placeholder @mixin for Sass

A mixin to style placeholders in HTML5 form elements.
Includes also a .placeholder class to be used with a polyfill e.g.
https://github.com/mathiasbynens/jquery-placeholder
Requires Sass 3.2.

Example usage (.scss):

input {
  @include placeholder {
    // styles for placeholder here 
  }
} */

 
@mixin placeholder {
		&::-webkit-input-placeholder {
				@content;
		}

		&:-moz-placeholder { /* Firefox 18- */
				@content;
		}

		&::-moz-placeholder {  /* Firefox 19+ */
				@content;
		}

		&:-ms-input-placeholder {
				@content;
		}

		&.placeholder {
				@content;
		}
}

/* Layout */
@mixin container {
	@include cf();
	width: 100%;
	max-width: $content-width;
	position: relative;
	margin: 0 auto;
	box-sizing: border-box;
}

/* Type */

/* Stacks */
@mixin font-stack--body {
	font-family: $primary-font;
	margin-bottom: $spacing-unit/4;
}

@mixin font-stack--headers {
	@include font-stack--body;
	margin-bottom: $spacing-unit/2;
}

@mixin type--base-header {
	@include font-stack--headers;
	margin: $spacing-unit/2 0;
	font-size: $med-font-size;
	font-weight: $regular;
	line-height: $base-line-height*0.8;
	color: $white;
	letter-spacing: 0;
}

/* Styles */
@mixin type--base-body {
	@include font-stack--body;
	margin-top: 0;
	font-size: $base-font-size;
	font-weight: $regular;
	line-height: $base-line-height;
	color: $grey--black;
}

@mixin type--base-body-black {
	@include type--base-body;
	color: $black;
}

@mixin type--base-small {
	font-size: $base-font-size;
	font-weight: $regular;
	color: $white;
	margin-top: $spacing-unit/4;
	margin-bottom: $spacing-unit/4;
}

@mixin type--base-xsmall {
	@include type--base-small;
	font-size: $xsmall-font-size;
}
